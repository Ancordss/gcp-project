logsBucket: "gs://logs-entrevista"

steps:
  - id: lint python
    name: 'python:3.10-alpine'
    dir: 'nginx-flask-mongo/flask'
    entrypoint: 'sh'
    args: [
      '-c', 
      'pip install flake8 && flake8 .'
    ]

  - id: build docker image
    name: 'gcr.io/cloud-builders/docker'
    dir: 'nginx-flask-mongo/flask'
    entrypoint: 'bash'
    args: [ '-c', 'docker build --tag=us-east1-docker.pkg.dev/entrevista123/flask-demo-app1/flask-demo-app1:latest .' ]
    waitFor: ['lint python']  # Este paso depende del paso de linting

  - id: push docker image
    name: 'gcr.io/cloud-builders/docker'
    dir: 'nginx-flask-mongo/flask'
    args: [
      'push', 'us-east1-docker.pkg.dev/$PROJECT_ID/flask-demo-app1/flask-demo-app1:latest'
    ]
    waitFor: ['build docker image']  # Este paso depende del paso de construcción de imagen

  - id: update kubernetes deployment
    dir: 'nginx-flask-mongo/flask'
    name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/backend'
      - 'backend=us-east1-docker.pkg.dev/$PROJECT_ID/flask-demo-app1/flask-demo-app1:latest'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=europe-west1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=elaniin-interview-dev'
    waitFor: ['push docker image']  # Este paso depende del paso de subir la imagen

  - id: rollout restart
    dir: 'nginx-flask-mongo/flask'
    name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'rollout'
      - 'restart'
      - 'deployment/backend'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=europe-west1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=elaniin-interview-dev'
    waitFor: ['update kubernetes deployment']  # Este paso depende del paso de actualización del despliegue

images:
  - 'us-east1-docker.pkg.dev/$PROJECT_ID/flask-demo-app1/flask-demo-app1:latest'

timeout: '1200s'
