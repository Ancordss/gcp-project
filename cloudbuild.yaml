# cloudbuild.yaml

logsBucket: "gs://logs-entrevista"

steps:

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'sh'
    args: ['-c', 'echo "Directorio actual:"; pwd; echo "Archivos en el directorio:"; ls -la']


  - name: 'gcr.io/cloud-builders/docker'
    dir: 'nginx-flask-mongo/flask'
    entrypoint: 'sh'
    args: ['-c', 'echo "Directorio actual:"; pwd; echo "Archivos en el directorio:"; ls -la']

  # 1. Navegar a la carpeta del servicio y construir la imagen de Docker
  # - name: 'gcr.io/cloud-builders/docker'
  #   dir: 'nginx-flask-mongo/flask'
  #   args: [
  #     'build', '-t', 'us-east1-docker.pkg.dev/entrevista123/flask-demo-app1/flask-demo-app1:latest', '.'
  #   ]

  - name: 'gcr.io/cloud-builders/docker'
    dir: 'nginx-flask-mongo/flask'
    entrypoint: 'bash'
    args: [ '-c', 'docker build --tag=us-east1-docker.pkg.dev/entrevista123/flask-demo-app1/flask-demo-app1:latest .' ]

  - id: 'build db'
    name: 'gcr.io/cloud-builders/docker'
    dir: 'nginx-flask-mongo/flask'

  # 2. Subir la imagen de Docker a Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 'us-east1-docker.pkg.dev/$PROJECT_ID/flask-demo-app1/flask-demo-app1:latest'
    ]

  # 3. Actualizar el despliegue en GKE solo para service1
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/backend'
      - 'backend=us-east1-docker.pkg.dev/$PROJECT_ID/flask-demo-app1/flask-demo-app1:latest'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=europe-west1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=elaniin-interview-dev'

images:
  - 'us-east1-docker.pkg.dev/$PROJECT_ID/flask-demo-app1/flask-demo-app1:latest'

timeout: '1200s'